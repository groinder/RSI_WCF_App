//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Phone", Namespace="http://schemas.datacontract.org/2004/07/Contract")]
    [System.SerializableAttribute()]
    public partial class Phone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DualSimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MicroSDCardSlotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatingSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReleaseYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DualSim {
            get {
                return this.DualSimField;
            }
            set {
                if ((this.DualSimField.Equals(value) != true)) {
                    this.DualSimField = value;
                    this.RaisePropertyChanged("DualSim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MicroSDCardSlot {
            get {
                return this.MicroSDCardSlotField;
            }
            set {
                if ((this.MicroSDCardSlotField.Equals(value) != true)) {
                    this.MicroSDCardSlotField = value;
                    this.RaisePropertyChanged("MicroSDCardSlot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatingSystem {
            get {
                return this.OperatingSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatingSystemField, value) != true)) {
                    this.OperatingSystemField = value;
                    this.RaisePropertyChanged("OperatingSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Producer {
            get {
                return this.ProducerField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerField, value) != true)) {
                    this.ProducerField = value;
                    this.RaisePropertyChanged("Producer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReleaseYear {
            get {
                return this.ReleaseYearField;
            }
            set {
                if ((this.ReleaseYearField.Equals(value) != true)) {
                    this.ReleaseYearField = value;
                    this.RaisePropertyChanged("ReleaseYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPhoneContract", CallbackContract=typeof(Client.ServiceReference1.IPhoneContractCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IPhoneContract {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPhoneContract/AddPhone")]
        void AddPhone(Client.ServiceReference1.Phone phone);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPhoneContract/AddPhone")]
        System.Threading.Tasks.Task AddPhoneAsync(Client.ServiceReference1.Phone phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhoneContract/GetPhone", ReplyAction="http://tempuri.org/IPhoneContract/GetPhoneResponse")]
        Client.ServiceReference1.Phone GetPhone(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhoneContract/GetPhone", ReplyAction="http://tempuri.org/IPhoneContract/GetPhoneResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Phone> GetPhoneAsync(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhoneContract/GetPhoneList", ReplyAction="http://tempuri.org/IPhoneContract/GetPhoneListResponse")]
        Client.ServiceReference1.Phone[] GetPhoneList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhoneContract/GetPhoneList", ReplyAction="http://tempuri.org/IPhoneContract/GetPhoneListResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Phone[]> GetPhoneListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhoneContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPhoneContract/AddPhoneCallback")]
        void AddPhoneCallback(Client.ServiceReference1.Phone[] phonesList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhoneContractChannel : Client.ServiceReference1.IPhoneContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhoneContractClient : System.ServiceModel.DuplexClientBase<Client.ServiceReference1.IPhoneContract>, Client.ServiceReference1.IPhoneContract {
        
        public PhoneContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PhoneContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PhoneContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PhoneContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PhoneContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AddPhone(Client.ServiceReference1.Phone phone) {
            base.Channel.AddPhone(phone);
        }
        
        public System.Threading.Tasks.Task AddPhoneAsync(Client.ServiceReference1.Phone phone) {
            return base.Channel.AddPhoneAsync(phone);
        }
        
        public Client.ServiceReference1.Phone GetPhone(int index) {
            return base.Channel.GetPhone(index);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Phone> GetPhoneAsync(int index) {
            return base.Channel.GetPhoneAsync(index);
        }
        
        public Client.ServiceReference1.Phone[] GetPhoneList() {
            return base.Channel.GetPhoneList();
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Phone[]> GetPhoneListAsync() {
            return base.Channel.GetPhoneListAsync();
        }
    }
}
