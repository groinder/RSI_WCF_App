//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.StreamServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StreamServiceReference.IStreamContract")]
    public interface IStreamContract {
        
        // CODEGEN: Generating message contract since the wrapper name (RequestFileMessage) of message RequestFileMessage does not match the default value (getMStream)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamContract/getMStream", ReplyAction="http://tempuri.org/IStreamContract/getMStreamResponse")]
        Client.StreamServiceReference.ResponseFileMessage getMStream(Client.StreamServiceReference.RequestFileMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamContract/getMStream", ReplyAction="http://tempuri.org/IStreamContract/getMStreamResponse")]
        System.Threading.Tasks.Task<Client.StreamServiceReference.ResponseFileMessage> getMStreamAsync(Client.StreamServiceReference.RequestFileMessage request);
        
        // CODEGEN: Generating message contract since the wrapper name (ResponseFileMessage) of message ResponseFileMessage does not match the default value (setMStream)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamContract/setMStream", ReplyAction="http://tempuri.org/IStreamContract/setMStreamResponse")]
        Client.StreamServiceReference.RequestFileMessage setMStream(Client.StreamServiceReference.ResponseFileMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamContract/setMStream", ReplyAction="http://tempuri.org/IStreamContract/setMStreamResponse")]
        System.Threading.Tasks.Task<Client.StreamServiceReference.RequestFileMessage> setMStreamAsync(Client.StreamServiceReference.ResponseFileMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestFileMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RequestFileMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string name1;
        
        public RequestFileMessage() {
        }
        
        public RequestFileMessage(string name1) {
            this.name1 = name1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResponseFileMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ResponseFileMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string name2;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream data;
        
        public ResponseFileMessage() {
        }
        
        public ResponseFileMessage(string name2, long size, System.IO.Stream data) {
            this.name2 = name2;
            this.size = size;
            this.data = data;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStreamContractChannel : Client.StreamServiceReference.IStreamContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StreamContractClient : System.ServiceModel.ClientBase<Client.StreamServiceReference.IStreamContract>, Client.StreamServiceReference.IStreamContract {
        
        public StreamContractClient() {
        }
        
        public StreamContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StreamContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StreamContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StreamContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.StreamServiceReference.ResponseFileMessage Client.StreamServiceReference.IStreamContract.getMStream(Client.StreamServiceReference.RequestFileMessage request) {
            return base.Channel.getMStream(request);
        }
        
        public string getMStream(string name1, out long size, out System.IO.Stream data) {
            Client.StreamServiceReference.RequestFileMessage inValue = new Client.StreamServiceReference.RequestFileMessage();
            inValue.name1 = name1;
            Client.StreamServiceReference.ResponseFileMessage retVal = ((Client.StreamServiceReference.IStreamContract)(this)).getMStream(inValue);
            size = retVal.size;
            data = retVal.data;
            return retVal.name2;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.StreamServiceReference.ResponseFileMessage> Client.StreamServiceReference.IStreamContract.getMStreamAsync(Client.StreamServiceReference.RequestFileMessage request) {
            return base.Channel.getMStreamAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.StreamServiceReference.ResponseFileMessage> getMStreamAsync(string name1) {
            Client.StreamServiceReference.RequestFileMessage inValue = new Client.StreamServiceReference.RequestFileMessage();
            inValue.name1 = name1;
            return ((Client.StreamServiceReference.IStreamContract)(this)).getMStreamAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.StreamServiceReference.RequestFileMessage Client.StreamServiceReference.IStreamContract.setMStream(Client.StreamServiceReference.ResponseFileMessage request) {
            return base.Channel.setMStream(request);
        }
        
        public string setMStream(string name2, long size, System.IO.Stream data) {
            Client.StreamServiceReference.ResponseFileMessage inValue = new Client.StreamServiceReference.ResponseFileMessage();
            inValue.name2 = name2;
            inValue.size = size;
            inValue.data = data;
            Client.StreamServiceReference.RequestFileMessage retVal = ((Client.StreamServiceReference.IStreamContract)(this)).setMStream(inValue);
            return retVal.name1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.StreamServiceReference.RequestFileMessage> Client.StreamServiceReference.IStreamContract.setMStreamAsync(Client.StreamServiceReference.ResponseFileMessage request) {
            return base.Channel.setMStreamAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.StreamServiceReference.RequestFileMessage> setMStreamAsync(string name2, long size, System.IO.Stream data) {
            Client.StreamServiceReference.ResponseFileMessage inValue = new Client.StreamServiceReference.ResponseFileMessage();
            inValue.name2 = name2;
            inValue.size = size;
            inValue.data = data;
            return ((Client.StreamServiceReference.IStreamContract)(this)).setMStreamAsync(inValue);
        }
    }
}
